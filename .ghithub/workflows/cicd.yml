# Name of the workflow
name: CI/CD for Dockerized Flask App

# Define when this workflow will run
on:
  push:
    branches: [ main ]  # Trigger on push to main branch
  pull_request:
    branches: [ main ]  # Trigger on pull requests to main branch

# Define the jobs to be executed
jobs:
  # Job to build Docker image
  dockerbuild:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner
    steps:
    - uses: actions/checkout@v4  # Checkout the repository code
    - name: Build The Docker Image
      # Build Docker image with a unique tag based on current timestamp
      run: docker build . --file DockerFile --tag workflow-test:$(date +%s)

  # Job to build and test the Python application
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checkout the repository code

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'  # Specify Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        pytest  # Run tests using pytest

  # Job to build and publish Docker image
  build-and-publish:
    needs: build-and-test  # This job runs only if build-and-test job succeeds
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Check out the repository

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Set up Docker Buildx for multi-platform builds

    - name: Login to DockerHub
      uses: docker/login-action@v2  # Login to DHub
      with:
        username: ${{ secrets.DOCKER_USERNAME }}  # Use DockerHub username & pw from GitHub secrets
        password: ${{ secrets.DOCKER_PASSWORD }}  

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .  # Build context is the current directory
        file: ./DockerFile  # Specify the Dockerfile to use
        push: true  # Push the image to DockerHub
        tags: ${{ secrets.DOCKER_USERNAME }}/flasktest-app:latest  # Tag the image

    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest }}  # Output the image digest for verification